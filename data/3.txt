Fun Side Projects That You Can Build TodayFrom building something in 3D to a Bitcoin tracker and moreDaanFollowMar 11 · 6 min read<img class="s t u hn ai" src="https://miro.medium.com/max/7764/0*aRJmtWErbMInfiCm" width="3882" height="2584" role="presentation"/>Photo by Christopher Gower on Unsplash.Working on side projects can expand your skillset dramatically as a developer and it will prepare you for further complex challenges. It’s probably the fastest way to improve since you can choose what project you want to work on — in contrast to your day job.There are no shortcuts when it comes to becoming a better developer. Spending time behind the keyboard is a must. So why not do it while working on a fun side project?However, most developers struggle with what they should build. They tend to overthink it, which leads to zero. I’ll save you the hassle of coming up with the next great killer app. Just start out small and simple.That’s why I’ve listed seven projects in this article that are both challenging and fun.Project 1: Personal Knowledge BaseA great side project that I can recommend to any developer is a personal knowledge base. This project is especially great if you're a relatively inexperienced developer. What’s so great about this side project is that the features and thus the difficulty can vary.To start out easy, you can implement the ability to store notes in markdown. If you want to make it a little more complex, you could add a feature that allows you to add links to tutorials and blog posts. If this is too easy for you, you could even try to create a basic text summary API.You’ll probably also want to be able to store PDFs in your knowledge base since they’re a valuable source of information. If you really want to go the extra mile, you could implement a search engine like Elasticsearch or Algolia to index the PDFs. You can index the title and the author and implement a search feature. Optionally, you can add tags so searching gets easier.Again, the possibilities are endless with this side project, which makes it suitable for every developer. The obvious way to do this is probably by making it a web application.What you’ll learn:Web development basics, like HTML5 and CSS.Interacting with the database.Storing files like PDFs.Interacting with a search engine and implementing a way to search in the indexed data.Project 2: Make Something in 3D<img class="s t u hn ai" src="https://miro.medium.com/max/1896/1*kqX4q7iFjDPoMgbnXasxbw.png" width="948" height="434" role="presentation"/>Photo by Babylon.js.What’s cooler than fiddling around with 3D? If you’ve never programmed anything in 3D, I can highly recommend it since it’s so much fun. The best part is that you don’t have to start from scratch.Have a look at D3 or Babylon, which are WebGL projects. Personally, I’ve fiddled around with Babylon a little bit, as it was suggested to me. Babylon comes with a playground where you can tinker with the API and you learn as you go. You don’t need to do anything to get it running since the IDE is online, just like CodePen.What you’ll learn:You’ll get a grasp of how 3D works.Learn about vectors, cameras, and scenes.Lots of cool stuff that you can build!Project 3: Raspberry Pi Bitcoin Tracker<img class="s t u hn ai" src="https://miro.medium.com/max/8578/0*ylDnYspT0inkW3n3" width="4289" height="2413" role="presentation"/>Photo by Harrison Broadbent on Unsplash.The Raspberry Pi can be used for a lot of fun things. One of the things that you can do with it is building a Bitcoin tracker. I really like using a Raspberry Pi in a side project since it brings software and hardware together.The goal of this project is to get the current Bitcoin price, which can be done via an API, and show it on an LED matrix display. You’ll need a few more things for this project besides a Raspberry Pi. You also need an LED matrix display, some LEDs, and a power adapter.You could go the extra mile by changing the color of the price. You could make the price green if it increases and red if it decreases, for example.What you’ll learn:The basic usage of a Raspberry Pi.Interacting with an API.The interaction between software and hardware.Project 4: PongBuilding the game Pong is a great way to get a feel for how games are developed from a basic perspective. It’s quite an easy game to start with if you don’t have any prior experience with developing games. You’ll get an introduction to concepts like entity movement and collision detection. The great thing is that you can make it both single-player and multiplayer.If you want to make an app, you could use Swift for this project. If you want to make this using HTML5, you could go for a JavaScript framework like React or Vue.What you’ll learn:Drawing on canvas.The movement of entities and collision detection.The detection of key presses.You could go the extra mile by implementing a computer to play against.Project 5: WebSockets<img class="s t u hn ai" src="https://miro.medium.com/max/1200/0*1FgpmI_YmBb5IfeA.gif" width="600" height="120" role="presentation"/>My own chatbox active in two browser tabs.Nowadays as a developer, real-time communication is getting more and more important. It is increasing both in usage and demand. Having some experience with how this works is only going to benefit you.There are dozens of side projects that you could work on that rely entirely on WebSocket communication. I’ve made a chatbox myself to get to know a little bit more about sockets.Building a chatbox is the perfect way to get started with WebSockets. You have a lot of different options when it comes to choosing your tech stack. Node.js could be one of the ways to go.What you’ll learn: The biggest takeaway from this project is that you’ll learn how sockets work.Project 6: Solving a MazeSolving a maze is a great way to get introduced to building an algorithm. The goal is to build a maze and let a bot navigate through the maze from the starting position to the end position.Positions in the maze will either be open or blocked with an obstacle. You can add more difficulty to this project by generating random mazes. What’s also a really cool feature to implement is to generate a maze based on an image. This could be as simple as a bitmap that has either white or black pixels where black pixels represent the wall, for example.<img class="s t u hn ai" src="https://miro.medium.com/max/640/0*AEQEn2f-_VQia7xl.jpg" width="320" height="320" role="presentation"/>Photo by ResearchGate.What you’ll learn:Learning and implementing a maze-solving strategy.Interacting with an API.You could go the extra mile by implementing multiple algorithms to solve a maze.Project 7: Boston Housing Dataset<img class="s t u hn ai" src="https://miro.medium.com/max/9184/0*_yB0RtsNz0X4wkT6" width="4592" height="3448" role="presentation"/>Photo by Tierra Mallorca on Unsplash.The Boston Housing Dataset is a great way to get started with machine learning. It’s a popular dataset used in pattern recognition literature. The dataset comes from the real estate industry in Boston and was created in 1993.This is a regression problem. It’s a fairly small dataset that has 506 rows and 14 columns. It’s great for beginners since you can attempt any technique without having to worry about crashing your computer.The goal of this project? Predicting the median value of owner-occupied homes.What you’ll learn: You’ll get a grasp of machine learning.Time to Get Your Hands Dirty!Now that we’ve gone over this list of fun side projects, it’s time to do some real work. Start by picking a project and stick with it. Jump behind the keyboard and don’t forget to have fun while you’re building and learning new things.You’ll probably run into some issues along the way. I would love to help you out and give you feedback on your project, so don’t hesitate to ask! I’m really looking forward to seeing some results.“If you’re not having fun, you’re doing something wrong.” — Groucho MarxHappy coding!